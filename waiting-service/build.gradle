plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id("com.google.cloud.tools.jib") version "3.4.5"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://jitpack.io' }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'io.projectreactor.kafka:reactor-kafka:1.3.23'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'io.asyncer:r2dbc-mysql:1.4.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    implementation 'com.github.pjh612:alert:1.1.0'
    testImplementation 'com.github.pjh612:alert:1.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations:2.15.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'com.github.codemonstur:embedded-redis:1.4.3' // test 전용 embedded redis 추가
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register("prepareKotlinBuildScriptModel") {}

jib {
    from {
        image = 'bellsoft/liberica-openjre-alpine:17'
        platforms {
            platform {
                architecture = "amd64"
                os = "linux"
            }
        }
    }
    to {
        def tagsValue = System.getProperty('tags') ?: 'latest'
        def imageName = System.getProperty('image') ?: rootProject.name + '-' + project.name + ":" + version
        image = imageName
        tags = [tagsValue]
    }

    extraDirectories {
        paths = ["${rootProject.projectDir}"]
        permissions = [
                '/opentelemetry-javaagent.jar': '755'
        ]
    }
    container {
        jvmFlags = [
                '-javaagent:/opentelemetry-javaagent.jar',
                '-Dotel.service.name=waiting-service',
                '-Dotel.exporter.otlp.protocol=grpc',
                '-Dotel.exporter.otlp.endpoint=http://grafana-agent-traces.monitoring.svc.cluster.local:4317',
        ]

        workingDirectory = '/app'
    }
}

tasks.register('buildDockerImage') {
    dependsOn 'build'
    finalizedBy 'jibDockerBuild'
}