spring:
  r2dbc:
    url: r2dbc:mysql://mysql.mysql.svc.cluster.local:3306/waiting
    password: PASSWORD
    username: root
  application:
    name: waiting-service
  kafka:
    client-id: payments
    consumer:
      auto-offset-reset: earliest
      enable-auto-commit: true
      group-id: waiting-service
    bootstrap-servers: my-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
    listener:
      concurrency: 1
      missing-topics-fatal: true
  data:
    redis:
      cluster:
        nodes:
          - redis-0.redis-headless.redis.svc.cluster.local:6379
          - redis-1.redis-headless.redis.svc.cluster.local:6379
          - redis-2.redis-headless.redis.svc.cluster.local:6379
          - redis-3.redis-headless.redis.svc.cluster.local:6379
          - redis-4.redis-headless.redis.svc.cluster.local:6379
          - redis-5.redis-headless.redis.svc.cluster.local:6379

server:
  port: 8081
  tomcat:
    mbeanregistry:
      enabled: true
logging:
  level:
    web: debug
secret: "waitinggnitiawwaitinggnitiawwaitinggnitiawwaitinggnitiaw"

alert:
  reactive: true
  bridge: kafka
  topics: "test-queue"

management:
  tracing:
    propagation:
      type: w3c
    enabled: true
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: "health,info,prometheus"
  metrics:
    tags:
      application: ${spring.application.name}